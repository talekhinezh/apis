openapi: 3.1.0
info:
  version: '0.0.5-beta'
  title: 'Anthic Construction API'
  description: |
    The Anthic Construction API provides tooling for constructing, verifying, and signing subintents for Anthic order
    submission.

servers:
  - url: 'https://taker-api.staging.anthic.io/construction'
paths:
  "/compose":
    post:
      summary: Create a Subintent with Signable Payload
      description: |
        Create a subintent based on a limit order and the payload to be signed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ComposeRequest"
            example:
              type: "LimitOrder"
              account: "account_sim12xsvygvltz4uhsht6tdrfxktzpmnl77r0d40j8agmujgdj025mrvx2"
              buy:
                symbol: "XRD"
                amount: "1.5"
              sell:
                symbol: "xUSDC"
                amount: "3200"
              id: 101
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ComposeResponse"
              example:
                unsigned_subintent: "4d21012105210607f20a00000000000000000a64000000000000002200002200000a65000000000000002020002200002020002022074103800051a0c2219f58abcbc2ebd2da349acb10773ffbc37b6af91fa8df2486c9ea0c087769746864726177210280005dacb86773d40da4d92659e48259d5c1677282850b7fb8bc149004af26658500000062acc5eb78ad000000000000000000000000000000020180005dacb86773d40da4d92659e48259d5c1677282850b7fb8bc149004af26650c0281000000002201018500000062acc5eb78ad0000000000000000000000000000000a0123802201005d756153fc6345a1f11d418deb420b528dc69e728ef7f6dd4d2a96c3410d0201850000167b0d12d114000000000000000000000000000000006001210181000000004103800051a0c2219f58abcbc2ebd2da349acb10773ffbc37b6af91fa8df2486c9ea0c0d6465706f7369745f62617463682101830060012100"
                payload_to_sign:
                  hex_bytes: "nothing-here-yet"

  "/parse":
    post:
      summary: Parse an unsigned Subintent
      description: |
        Parse an unsigned subintent into an anthic limit order
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ParseRequest"
            example:
              unsigned_subintent: "4d21012105210607f20a00000000000000000a64000000000000002200002200000a65000000000000002020002200002020002022074103800051a0c2219f58abcbc2ebd2da349acb10773ffbc37b6af91fa8df2486c9ea0c087769746864726177210280005dacb86773d40da4d92659e48259d5c1677282850b7fb8bc149004af26658500000062acc5eb78ad000000000000000000000000000000020180005dacb86773d40da4d92659e48259d5c1677282850b7fb8bc149004af26650c0281000000002201018500000062acc5eb78ad0000000000000000000000000000000a0123802201005d756153fc6345a1f11d418deb420b528dc69e728ef7f6dd4d2a96c3410d0201850000167b0d12d114000000000000000000000000000000006001210181000000004103800051a0c2219f58abcbc2ebd2da349acb10773ffbc37b6af91fa8df2486c9ea0c0d6465706f7369745f62617463682101830060012100"

      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ParseResponse"
              example:
                type: "LimitOrder"
                account: "account_sim12xsvygvltz4uhsht6tdrfxktzpmnl77r0d40j8agmujgdj025mrvx2"
                buy:
                  symbol: "XRD"
                  amount: "1.5"
                sell:
                  symbol: "xUSDC"
                  amount: "3200"
                id: 101

  "/sign":
    post:
      summary: Create a Signed Partial Transaction
      description: |
        Create a signed partial transaction from a subintent and signature
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignRequest"
            example:
              unsigned_subintent: "4d21012105210607f20a00000000000000000a64000000000000002200002200000a65000000000000002020002200002020002022074103800051a0c2219f58abcbc2ebd2da349acb10773ffbc37b6af91fa8df2486c9ea0c087769746864726177210280005dacb86773d40da4d92659e48259d5c1677282850b7fb8bc149004af26658500000062acc5eb78ad000000000000000000000000000000020180005dacb86773d40da4d92659e48259d5c1677282850b7fb8bc149004af26650c0281000000002201018500000062acc5eb78ad0000000000000000000000000000000a0123802201005d756153fc6345a1f11d418deb420b528dc69e728ef7f6dd4d2a96c3410d0201850000167b0d12d114000000000000000000000000000000006001210181000000004103800051a0c2219f58abcbc2ebd2da349acb10773ffbc37b6af91fa8df2486c9ea0c0d6465706f7369745f62617463682101830060012100"
              signature: "nothing-here-yet"
      responses:
        '200':
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignResponse"
              example:
                signed_partial_transaction: "4d2103210221012105210607f20a00000000000000000a64000000000000002200002200000ae9030000000000002020002200002020002022074103800051a0c2219f58abcbc2ebd2da349acb10773ffbc37b6af91fa8df2486c9ea0c087769746864726177210280005dacb86773d40da4d92659e48259d5c1677282850b7fb8bc149004af266585000064a7b3b6e00d00000000000000000000000000000000020180005dacb86773d40da4d92659e48259d5c1677282850b7fb8bc149004af26650c02810000000022010185000064a7b3b6e00d000000000000000000000000000000000a0123802201005d756153fc6345a1f11d418deb420b528dc69e728ef7f6dd4d2a96c3410d02018500a0724e18090000000000000000000000000000000000006001210181000000004103800051a0c2219f58abcbc2ebd2da349acb10773ffbc37b6af91fa8df2486c9ea0c0d6465706f7369745f62617463682101830060012100202100202200202000"

components:
  schemas:
    ComposeRequest:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/LimitOrder'
    ComposeResponse:
      type: object
      required:
        - unsigned_subintent
        - payload_to_sign
      properties:
        unsigned_subintent:
          type: string
        payload_to_sign:
          $ref: "#/components/schemas/PayloadToSign"
    ParseRequest:
      type: object
      required:
        - unsigned_subintent
      properties:
        unsigned_subintent:
          type: string
    ParseResponse:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/LimitOrder'
    SignRequest:
      type: object
      required:
        - unsigned_subintent
        - signature
      properties:
        unsigned_subintent:
          type: string
        signature:
          type: string
    SignResponse:
      type: object
      required:
        - signed_partial_transaction
      properties:
        signed_partial_transaction:
          type: string
    LimitOrder:
      type: object
      required:
        - type
        - account
        - buy
        - sell
        - expiry_timestamp,
        - id
      properties:
        type:
          type: string
        account:
          type: string
        buy:
          $ref: "#/components/schemas/ResourceAmount"
        sell:
          $ref: "#/components/schemas/ResourceAmount"
        use_instamint:
          type: bool
        expiry_timestamp:
          type: number
        id:
          type: number
    ResourceAmount:
      type: object
      required:
        - resource_address
        - amount
      properties:
        resource_address:
          type: string
        amount:
          type: string
    PayloadToSign:
      type: object
      required:
        - hex_bytes
      properties:
        hex_bytes:
          type: string
    Signature:
      discriminator:
        propertyName: type
      oneOf:
        - $ref: '#/components/schemas/Ed25519Signature'
        - $ref: '#/components/schemas/Secp256k1Signature'
    Ed25519Signature:
      type: object
      required:
        type:
          type: string
        public_key:
          type: string
        hex_bytes:
          type: string
    Secp256k1Signature:
      type: object
      required:
        type:
          type: string
        public_key:
          type: string
        hex_bytes:
          type: string

